{
  "subtopics": {
    "arrays": {
      "description": "Discover efficient numerical computations and data processing with NumPy arrays",
      "estimated_time": "2 hours",
      "lesson_count": 0,
      "name": "NumPy Arrays",
      "order": 1,
      "prerequisites": [
        "dictionaries",
        "functions",
        "lists",
        "loops",
        "sets"
      ],
      "question_count": 0,
      "status": "active",
      "video_count": 0
    },
    "dictionaries": {
      "description": "Explore key-value mappings and dictionary comprehensions",
      "estimated_time": "1.5 hours",
      "lesson_count": 0,
      "name": "Python Dictionaries",
      "order": 2,
      "prerequisites": [
        "lists"
      ],
      "question_count": 0,
      "status": "active",
      "video_count": 0
    },
    "functions": {
      "description": "Master function concepts, arguments, return values, and advanced techniques",
      "estimated_time": "2 hours",
      "lesson_count": 14,
      "name": "Python Functions",
      "order": 3,
      "prerequisites": [],
      "question_count": 44,
      "status": "active",
      "video_count": 1
    },
    "lists": {
      "description": "Understand Python's built-in list data structure and list comprehensions",
      "estimated_time": "1.5 hours",
      "lesson_count": 0,
      "name": "Python Lists",
      "order": 4,
      "prerequisites": [],
      "question_count": 0,
      "status": "active",
      "video_count": 0
    },
    "loops": {
      "description": "Learn how to automate repetitive tasks using for and while loops",
      "estimated_time": "1.5 hours",
      "lesson_count": 0,
      "name": "Python Loops",
      "order": 5,
      "prerequisites": [],
      "question_count": 0,
      "status": "active",
      "video_count": 1
    },
    "sets": {
      "description": "Learn about unordered collections and set operations like union and intersection",
      "estimated_time": "1 hour",
      "lesson_count": 0,
      "name": "Python Sets",
      "order": 6,
      "prerequisites": [
        "lists"
      ],
      "question_count": 0,
      "status": "active",
      "video_count": 0
    },
    "week_1": {
      "description": "Meet Python & Hello World - Learn print() and comments through an RPG adventure",
      "estimated_time": "1 hour",
      "lesson_count": 10,
      "name": "Week 1 - The Hero Awakens",
      "order": 7,
      "prerequisites": [],
      "question_count": 10,
      "status": "active",
      "video_count": 0
    },
    "week_2": {
      "description": "Variables & Data Types - Create and manage hero stats using variables",
      "estimated_time": "1.5 hours",
      "lesson_count": 12,
      "name": "Week 2 - Hero Stats Training",
      "order": 8,
      "prerequisites": [
        "week_1"
      ],
      "question_count": 11,
      "status": "active",
      "video_count": 0
    },
    "week-3": {
      "description": "Your hero has stats now, but the villagers are not impressed. They shout:\n\"Traveler, tell us your name! How many coins do you carry? How strong are you?\"\n\nTo answer them, your hero needs to listen and respond. This is where we use input() and friendly output.",
      "name": "Week 3 ‚Äì Speak with the Villagers",
      "order": 9,
      "status": "active"
    },
    "week-4": {
      "order": 10,
      "name": "Week 4 ‚Äì The Hero‚Äôs First Choice",
      "description": "Your hero steps bravely into the forest. Birds sing‚Ä¶ until suddenly ‚Äî BAM! üêâ\nA monster blocks the path.\n\nThe villagers whisper:\n\"Now we‚Äôll see if this hero is smart‚Ä¶ or just lunch.\"\n\nIt‚Äôs time for your first big choice:\n\nWill you fight the monster?\n\nWill you run away (screaming, probably)?\n\nOr will you bribe it with shiny coins?\n\nIn Python, choices are written with conditionals: if, elif, and else.",
      "status": "active"
    }
  },
  "allowed_tags": [
    "*args and **kwargs",
    "Comment",
    "DataType",
    "default parameter values",
    "error handling",
    "function definition",
    "function return values",
    "keyword arguments",
    "passing function arguments",
    "positional-only and keyword-only arguments",
    "Print",
    "python function basics",
    "python syntax",
    "recursive functions",
    "return values",
    "syntax",
    "terminology",
    "Variable"
  ]
}